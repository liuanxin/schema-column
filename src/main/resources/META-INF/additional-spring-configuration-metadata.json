{
  "properties": [
    {
      "name": "query.scan-packages",
      "type": "java.lang.String",
      "defaultValue": "",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "存放关联表的类的包地址, 多个用英文逗号隔开."
    },
    {
      "name": "query.table-prefix",
      "type": "java.lang.String",
      "defaultValue": "",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "当关联表的类上没有标注解, 将类名转换成表名时, 表的前缀."
    },
    {
      "name": "query.has-return-info",
      "type": "java.lang.Boolean",
      "defaultValue": "false",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "设置为 true 时查询关联信息将返回空."
    },
    {
      "name": "query.required-alias",
      "type": "java.lang.Boolean",
      "defaultValue": "false",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "设置为 true 时, 查询只能使用别名."
    },
    {
      "name": "query.need-condition-or-page",
      "type": "java.lang.Boolean",
      "defaultValue": "false",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "设置为 true 时, 查询必须要有条件或带有分页."
    },
    {
      "name": "query.alias-generate-rule",
      "type": "com.github.liuanxin.query.enums.AliasGenerateRule",
      "defaultValue": "Standard",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "别名生成的规则: Standard(表 UserInfo  字段 userName, 不设置则默认是此值), Horizontal(表 User-Info  字段 user-name), Under(表 User_Info  字段 user_name), Letter(表 A-B...Z-AA...ZZ  字段 a-b...z-aa...zz), Same(一致), Lower(小写), Upper(大写)."
    },
    {
      "name": "query.deep-max-page-size",
      "type": "java.lang.Integer",
      "defaultValue": "10000",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "当要请求的数据页(page * limit)大于当前值时, sql 查询将会拆分成 2 条, 先只查 id 再用 id 查具体的数据."
    },
    {
      "name": "query.max-list-count",
      "type": "java.lang.Integer",
      "defaultValue": "1000",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "查询条件是集合时的最大个数."
    },
    {
      "name": "query.one-to-one-has-many-rule",
      "type": "java.lang.Integer",
      "defaultValue": "0",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "当表与表之间是一对一关联, 但查询时数据却出现了多条时的处理: Exception(抛出异常, 此为默认), First(以前面的为准), Cover(后面覆盖前面)."
    },
    {
      "name": "query.logic-delete-column",
      "type": "java.lang.String",
      "defaultValue": "",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "用来做逻辑删除的字段名, 标了 @LogicInfo 注解则以注解所在字段为主."
    },
    {
      "name": "query.logic-value",
      "type": "java.lang.String",
      "defaultValue": "",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "用来做逻辑删除的默认值, 比如设置成 0, 表中有字段标了 @LogicDelete 则以注解为主."
    },
    {
      "name": "query.logic-delete-boolean-value",
      "type": "java.lang.String",
      "defaultValue": "",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "用来做逻辑删除的字段类型是 tinyint(1) 时的删除值, 比如设置成 1, 表中有字段标了 @LogicDelete 则以注解为主."
    },
    {
      "name": "query.logic-delete-int-value",
      "type": "java.lang.String",
      "defaultValue": "",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "用来做逻辑删除的字段类型是 int 时的删除值, 比如设置成 UNIX_TIMESTAMP(), 表中有字段标了 @LogicDelete 则以注解为主."
    },
    {
      "name": "query.logic-delete-long-value",
      "type": "java.lang.String",
      "defaultValue": "",
      "sourceType": "com.github.liuanxin.query.core.TableColumnTemplate",
      "description": "用来做逻辑删除的字段类型是 bigint 时的值, 比如设置成 id, 表中有字段标了 @LogicDelete 则以注解为主."
    }
  ]
}
